#include<stdio.h>

int main(){

    //  int x;
    //  printf("Enter no : ");
    //  scanf("%d",&x);
    //  int result = 0;

    //  for (int i=x;i!=0;i=i/10)
    //  {
    //     int rem = i%10;
    //     result = result*10+rem;
    //  }

    //  printf("Reverse of Digits of %d is %d",x,result);

    // Take a number as input and check whether its prime or not
    //  int x;
    //  printf("Enter no : ");
    //  scanf("%d",&x);
    //  int isprime =0; //kya prime hai? 0-not prime ,  1 prime

    //  for (int i=2;i<x;i++)
    //  {
    //      if (x%i==0)
    //      {
    //         isprime=0;
    //         break;
    //      }
    //      else{
    //         isprime =1;
    //      }
    //  }

    // if (isprime==1)
    // {
    //     printf("%d is prime",x);
    // }
    // else
    // {
    //     printf("%d is not prime",x);
    // }

    //  int x;
    //  printf("Enter no : ");
    //  scanf("%d",&x);
    //  int isprime =0; //kya prime hai? 0-not prime ,  1 prime

    //  for (int i=2;i<x;i++)
    //  {
    //      if (x%i==0)
    //      {
    //         isprime=0;
    //         break;
    //      }
    //      else{
    //         isprime =1;
    //      }
    //  }

    // if (isprime==1 || x==2)
    // {
    //     printf("%d is prime",x);
    // }
    // else
    // {
    //     printf("%d is not prime",x);
    // }

    // nested for loop

//  for (int i=1;i<=3;i++)
//     {
//         for (int j=1;j<=3;j++)
//         {
//             printf("i=%d , j=%d\n",i,j);
//         }
//     }   

//  for (int i=1;i<=3;i++)
//     {
//         for (int j=1;j<=i;j++)
//         {
//             printf("i=%d , j=%d\n",i,j);
//         }
//     }   
// Q - Write a program to print the following pattern using nested loops:
// 1
// 11
// 111
// 1111
// 11111

    //   for (int row=1;row<=5;row++)
    // {
    //     for(int column=1;column<=row;column++)
    //     {
    //         printf("%d",1);
    //     }
    //     printf("\n");
    // }

// HOMEWORK

// 1
// 11
// 111
// 1111
// 11111

// 1
// 12
// 123
// 1234
// 12345

// 1
// 22
// 333
// 4444
// 55555

// 1
// 01
// 010
// 1010
// 10101

     return 0;

}
